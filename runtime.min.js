(function(){"use strict";const SERVER_ROOT="https://rintaroutw.github.io/fsg",FSG_NAMESPACE="https://rintaroutw.github.io/fsg",RUNTIME_DEFAULT_STYLE=String.raw`<style>
svg .ui-select-box {
  stroke-width: 0.5;
  fill: none;
}

svg .menu {
  font: 0.9em Roboto, Helvetica, Sans-Serif, Times, serif, monospace;
}

svg .menu_title {
  fill: #aaa;
  user-select: none;
  -webkit-user-select: none;
  font-family: Georgia, 'Times New Roman', Times, serif;
}

svg .menu_item {
  font-weight: 300;
  fill: #888;
  user-select: none;
  -webkit-user-select: none;
}

svg .menu_item:hover {
  fill: #fff;
  cursor: pointer;
}

svg .hidden {
  visibility: hidden;
}

svg .cover {
  stroke: rgba(1,0,0,0);
  stroke-width: 10;
  fill: none;
}

svg .cover:hover {
  cursor: pointer;
}

svg .shape.none{
  fill: none;
}

svg .parallel-point, svg .perp-point{
  visibility: hidden;
}

svg .dashed {
  stroke-dasharray: 5 3;
  stroke-width: 1.2;
}

svg .point, svg .pin-point:hover {
  cursor: grab;
}

svg .mid-point, svg .intersect-point:hover {
  cursor: pointer;
}

svg g, svg div, svg foreignObject, svg span {
  position: relative;
}

svg span.base {
 position: relative !important;
}

svg .latex, svg .label, svg .title {
  user-select: none;
}

svg .latex-container {
  width: max-content;
  height: max-content;
  position: fixed; /* important for Safari */
}
</style>`,RUNTIME_STYLE_LINK=String.raw`<link xmlns="http://www.w3.org/1999/xhtml" rel="stylesheet" href="${SERVER_ROOT}/style/runtime.css"/>`,KATEX_STYLE_LINK=String.raw`<link xmlns="http://www.w3.org/1999/xhtml" rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css"/>`,SNAP_GRID_INTERVAL=5,DEFAULT_WINDOW_WIDTH=883,DEFAULT_WINDOW_HEIGHT=910,COMPONENT_NO_ATTR="component_no",COMPONENT_REFS_ATTR="component_refs",OF_ATTR="of",VECTOR_START_MARKER_RADIUS=3,VECTOR_END_MARKER_ARROW_WIDTH=6,VECTOR_END_MARKER_ARROW_LENGTH=10,POINT_RADIUS=6,DEFAULT_TEXT=String.raw`\LaTeX`,DEFAULT_LABEL_OFFSET_X=5,DEFAULT_LABEL_OFFSET_Y=5,DEFAULT_STROKE_COLOR="#888888aa",DEFAULT_TRANSPARENT_COLOR="#ffffff00",DEFAULT_ANGLE_RADIUS=15;function snapTo(e){return{x:e.x-=e.x%SNAP_GRID_INTERVAL,y:e.y-=e.y%SNAP_GRID_INTERVAL}}function stdGetHeader(){return{method:"GET",headers:new Headers({"Content-Type":"text/plain"})}}function fetchSrc(e){return fetch(e,stdGetHeader()).then((e=>{if(e.ok)return e.text()}))}function init_component_system(e){e.fsg.component={};const t=e.find(".component");let n=0;t.forEach((e=>{const t=Number(e.attr(COMPONENT_NO_ATTR));t>n&&(n=t)})),e.fsg.component.max_component_no=n,e.fsg.component.all=[]}function componentByNo(e,t){const n=e.fsg.component.all.find((e=>e.component_no==Number(t)));return console.assert(n,"component not found",t),n}function labelOf(e,t){const n=e.find(".label");let o=null;return n.each((e=>{t==Number(e.attr(OF_ATTR))&&(o=e)})),o}class Component{constructor({draw:e,element:t}){console.assert(e,"draw is required"),console.assert(t,"element is required"),console.assert(e===t.parent(),"element must be the child of draw"),this.draw=e,this.element=t,t.component=this;let n=t.attr(COMPONENT_NO_ATTR);void 0===n&&(e.fsg.component.max_component_no++,n=e.fsg.component.max_component_no,t.attr(COMPONENT_NO_ATTR,n)),this.component_no=Number(n);const o=t.attr("label");o&&this.addLabel(e,o),e.fsg.component.all.push(this)}watchUpdate(e,t){e.forEach((e=>{e.on("update",(e=>{t(e)}))}))}remove(){this.removeLabel(),this.element.fire("remove"),this.element.remove(),this.draw.fsg.component.all=this.draw.fsg.component.all.filter((e=>e!==this))}center(){return{x:this.element.cx(),y:this.element.cy()}}forward(){this.element.forward(),this.element.next()?.hasClass("cover")&&this.element.forward()}backward(){this.element.prev()?.hasClass("cover")&&this.element.backward(),this.element.backward()}back(){this.draw.findOne(".ui-select-box").after(this.element)}front(){this.element.front()}undo(){this.remove()}getAttributes(){return["id","class","cx","cy","text","fill","stroke"]}getAttribute(e){return"text"==e?this.getText():this.element.attr(e)}setAttribute(e,t){if("text"==e)return e="label",this.element.attr(e,t),void this.setText(t);this.element.attr(e,t)}setText(e){e&&0!=e.length?this.label?this.label.text(e):this.addLabel(e):this.removeLabel()}getText(){return this.label?this.label.text():""}addLabel(e){const t=this.draw,n=this.element;let o=labelOf(t,this.component_no);if(!o){const s={x:n.cx()+DEFAULT_LABEL_OFFSET_X,y:-n.cy()+DEFAULT_LABEL_OFFSET_Y};o=t.text(e).attr("class","label").attr("offset_x",DEFAULT_LABEL_OFFSET_X).attr("offset_y",DEFAULT_LABEL_OFFSET_Y).attr(OF_ATTR,n.attr(COMPONENT_NO_ATTR)).flip("y").move(s.x,s.y),t.add(o)}o.on("mousedown",(e=>{o.lastEvent="mousedown",o.fire("dragstart",{dragTarget:o}),e.stopPropagation()})).on("mouseup",(()=>{o.lastEvent="mouseup",o.fire("dragend")})).on("mousemove",(()=>{o.lastEvent="mousemove"})).on("dragstart",(()=>{t.dragTarget=o})).on("dragend",(()=>{t.dragTarget=null;const e={dx:o.x()-n.cx(),dy:o.y()+n.cy()};o.attr("offset_x",e.dx).attr("offset_y",e.dy)})),this.watchUpdate([n],(()=>{const e=o.attr("offset_x"),t=o.attr("offset_y"),s={x:n.cx()+e,y:-n.cy()+t};o.move(s.x,s.y)}));const s=new MutationObserver((e=>{e.forEach((e=>{if("label"==e.attributeName){let e=n.node.getAttribute("label");e||(e="");const t=o.attr("offset_x"),s=o.attr("offset_y"),r={x:n.cx()+t,y:-n.cy()+s};o.text(e).move(r.x,r.y)}}))}));s.observe(n.node,{attributes:!0}),this.observer=s,this.label=o}removeLabel(){this.label&&(this.observer.disconnect(),this.observer=null,this.label.remove(),this.label=null)}}class SelectableComponent extends Component{constructor({draw:e,element:t,override:n}){super({draw:e,element:t}),n||(t.on("mouseenter",(()=>{e.dragTarget||e.dragSelectStart||t.addClass("hover")})).on("mouseleave",(()=>{t.removeClass("hover")})),t.on("mousedown",(e=>{t.lastEvent="mousedown",e.stopPropagation()})).on("mouseup",(()=>{"mousedown"==t.lastEvent&&this.toggleSelected(),t.lastEvent="mouseup"}))),selectComponent(this.draw,this)}remove(){unselectComponent(this.draw,this),super.remove()}toggleSelected(){this.isSelected()?unselectComponent(this.draw,this):selectComponent(this.draw,this)}isSelected(){return this.element.hasClass("selected")}select(){this.element.addClass("selected")}unselect(){this.element.removeClass("selected"),this.element.removeClass("hover")}}function init_module_marker(e){deinit_module_marker(e),e.fsg.marker={};let t=e.parent().defs().findOne(".vector-start-marker");t||(t=e.parent().marker(2*VECTOR_START_MARKER_RADIUS,2*VECTOR_START_MARKER_RADIUS,(e=>{const t=VECTOR_START_MARKER_RADIUS;e.circle(t).radius(t).cx(t).cy(t).attr("class","vector-marker-start")})),t.attr("class","vector-start-marker")),e.fsg.marker.vector_start_marker=t;let n=e.parent().defs().findOne(".vector-end-marker");n||(n=e.parent().marker(VECTOR_END_MARKER_ARROW_LENGTH,VECTOR_END_MARKER_ARROW_WIDTH,(e=>{const t=String.raw`0 0, ${VECTOR_END_MARKER_ARROW_LENGTH} ${VECTOR_END_MARKER_ARROW_WIDTH/2}, 0 ${VECTOR_END_MARKER_ARROW_WIDTH}`;e.polygon(t).stroke({width:1}).attr("class","vector-marker-end")})),n.size(VECTOR_END_MARKER_ARROW_LENGTH,VECTOR_END_MARKER_ARROW_WIDTH),n.ref(VECTOR_END_MARKER_ARROW_LENGTH,VECTOR_END_MARKER_ARROW_WIDTH/2),n.attr("class","vector-end-marker")),e.fsg.marker.vector_end_marker=n}function deinit_module_marker(e){e.fsg.marker?.vector_start_marker&&(e.fsg.marker.vector_start_marker.remove(),e.fsg.marker.vector_start_marker=null),e.fsg.marker?.vector_end_marker&&(e.fsg.marker.vector_end_marker.remove(),e.fsg.marker.vector_end_marker=null)}const tolerance_error=1e-4;function inside(e,t){return t&&t.x>=e.x-tolerance_error&&t.x<=e.x+e.width+tolerance_error&&t.y>=e.y-tolerance_error&&t.y<=e.y+e.height+tolerance_error}function pointOnScreen(e){const t=e.element,n=t.cx(),o=t.cy(),s=t.transform();return{x:n*s.a+o*s.c+s.e,y:n*s.b+o*s.d+s.f}}function clipping(e,t,n){console.assert(t,"p1 is required"),console.assert(n,"p2 is required");const o={x:n.x-t.x,y:n.y-t.y},{x:s,y:r,width:i,height:a}=e;let c=[],l={x:1,y:0},d=intersect(t,o,n={x:s,y:r},l);return inside(e,d)&&c.push(d),l={x:0,y:1},d&&d.x==s||(d=intersect(t,o,n,l),inside(e,d)&&c.push(d)),d=intersect(t,o,n={x:s+i,y:r+a},l),inside(e,d)&&c.push(d),l={x:1,y:0},d&&d.y==r+i||(d=intersect(t,o,n,l),inside(e,d)&&c.push(d)),c}function intersect(e,t,n,o){let s=t.x*o.y-o.x*t.y;if(0==s||isNaN(s))return null;let r=((n.x-e.x)*o.y-(n.y-e.y)*o.x)/s;return{x:e.x+r*t.x,y:e.y+r*t.y}}function projectPointOnLine(e,t,n){const o=e.x-t.x,s=e.y-t.y,r=o*n.x+s*n.y;return{x:t.x+n.x*r,y:t.y+n.y*r}}function intersectLineAndCircle(e,t,n,o){console.assert(o,"circleRadius must be defined");const s=projectPointOnLine(n,e,t),r=(n.x-s.x)**2+(n.y-s.y)**2;if(r>o**2)return null;if(r==o**2)return[s];const i=Math.sqrt(o**2-r);return[{x:s.x+t.x*i,y:s.y+t.y*i},{x:s.x-t.x*i,y:s.y-t.y*i}]}function twoCirclesIntersection(e,t){var n,o,s,r,i,a,c=Math.sqrt((e.a-t.a)**2+(e.b-t.b)**2);if(e.r+t.r>=c&&c>=Math.abs(e.r-t.r)){var l=c+e.r+t.r,d=c+e.r-t.r,m=c-e.r+t.r,p=-c+e.r+t.r,u=Math.sqrt(l*d*m*p)/4;if(s=(n=(e.a+t.a)/2+(t.a-e.a)*(e.r*e.r-t.r*t.r)/(2*c*c))+(o=2*(e.b-t.b)*u/(c*c)),r=n-o,i=(n=(e.b+t.b)/2+(t.b-e.b)*(e.r*e.r-t.r*t.r)/(2*c*c))-(o=2*(e.a-t.a)*u/(c*c)),a=n+o,Math.abs((s-e.a)*(s-e.a)+(i-e.b)*(i-e.b)-e.r*e.r)>1e-7){var h=i;i=a,a=h}return[{x:s,y:i},{x:r,y:a}]}return null}function findBottom(e,t){let n=t[0];return t.forEach((t=>{const o=e.index(t);-1!=o&&o<e.index(n)&&(n=t)})),n}function putBehindPoints(e,t,n,o){const s=findBottom(e,t);e.index(s)>0&&(n.insertBefore(s),o.insertBefore(n))}class Shape extends SelectableComponent{constructor({draw:e,element:t,cover:n,points:o}){if(console.assert(e,"draw is required"),console.assert(t,"element is required"),console.assert(n,"cover is required"),super({draw:e,element:t}),o){const e=o.map((e=>e.attr(COMPONENT_NO_ATTR)));t.attr(COMPONENT_REFS_ATTR,e.join(",")),this.points=o}n.attr(OF_ATTR,this.component_no).attr("fill",DEFAULT_TRANSPARENT_COLOR),this.cover=n;n.on("mousedown",(e=>{this.toggleSelected(),e.stopPropagation()})).on("mouseenter",(()=>{e.dragTarget||e.dragSelectStart||(t.addClass("hover"),n.addClass("hover"))})).on("mouseleave",(()=>{t.removeClass("hover"),n.removeClass("hover")}))}remove(){this.cover.remove(),super.remove()}forward(){this.cover.forward(),this.element.forward(),this.cover.next()?.hasClass("cover")&&(this.cover.forward(),this.element.forward())}backward(){this.element.prev()?.hasClass("cover")&&(this.element.backward(),this.cover.backward()),this.element.backward(),this.cover.backward()}back(){const e=this.draw.findOne(".ui-select-box");e.after(this.cover),e.after(this.element)}front(){this.element.front(),this.cover.front()}}function currentFillColor(){return SVG("#field_fill").node.value}function currentStrokeColor(){return SVG("#field_stroke").node.value}class InvisiblePoint extends Component{constructor({draw:e,element:t}){super({draw:e,element:t})}select(){console.warn("FIXME: this should not be called")}unselect(){console.warn("FIXME: this should not be called"),console.assert("this should not be called, fixme now")}getAttributes(){return console.assert(!0,"unselectable point should not be inspected"),[]}}class ParallelPoint extends InvisiblePoint{constructor({draw:e,componentRefs:t,element:n}){super({draw:e,element:n}),n.attr(COMPONENT_REFS_ATTR,t.join(","));const o=t.map((t=>componentByNo(e,t)));this.refComponents=o,o.forEach((e=>{e.element.on("update",this.update.bind(this)),e.element.on("remove",this.remove.bind(this))}))}remove(){this.refComponents.forEach((e=>{e.element.off("update",this.update)})),super.remove()}update(){const[e,t]=this.refComponents,n=t.center(),o=e.direction(),s={x:n.x+20*o.x,y:n.y+20*o.y};this.element.center(s.x,s.y),this.element.fire("update")}}function addParallelPoint({draw:e,coord:t,componentRefs:n,element:o,component_no:s}){return o||(o=e.circle(POINT_RADIUS).move(t.x-POINT_RADIUS/2,t.y-POINT_RADIUS/2).attr("class","parallel-point component")),s&&o.attr(COMPONENT_NO_ATTR,s),new ParallelPoint({draw:e,componentRefs:n,element:o})}class PerpPoint extends InvisiblePoint{constructor({draw:e,componentRefs:t,element:n}){super({draw:e,element:n}),n.attr(COMPONENT_REFS_ATTR,t.join(","));const o=t.map((t=>componentByNo(e,t)));this.refComponents=o,o.forEach((e=>{e.element.on("update",this.update.bind(this)),e.element.on("remove",this.remove.bind(this))}))}remove(){this.refComponents.forEach((e=>{e.element.off("update",this.update)})),super.remove()}update(){const[e,t]=this.refComponents,n=e.direction(),o=pointOnScreen(t),s={x:o.x-20*n.y,y:o.y+20*n.x};this.element.center(s.x,s.y),this.element.fire("update")}}function addPerpPoint({draw:e,coord:t,componentRefs:n,element:o,component_no:s}){return o||(o=e.circle(POINT_RADIUS).move(t.x-POINT_RADIUS/2,t.y-POINT_RADIUS/2).attr("class","perp-point component")),s&&o.attr(COMPONENT_NO_ATTR,s),new PerpPoint({draw:e,componentRefs:n,element:o})}class AppendingPinPoint{constructor({draw:e,componentRef:t,element:n}){this.element=n,n.component=this,e.dragTarget=n,n.on("dragmove",(()=>{n.fire("update",{target:this})}));const o=componentByNo(e,t);console.assert(o,"cant find target compoenent",t),o.element.on("update",this.update.bind(this)),o.element.on("remove",this.remove.bind(this)),this.draw=e,this.targetComponent=o,o.element.hasClass("circle")?this.type="circle":this.type="line",this.update()}remove(){this.targetComponent.element.off("update",this.update),this.targetComponent.element.off("remove",this.remove),this.element.remove()}done(){console.log("done");const e=this.draw,t=this.type,n={x:this.element.cx(),y:this.element.cy()},o=this.targetComponent.component_no;return this.remove(),this.targetComponent.endAppendMode(),{draw:e,coord:n,type:t,componentRef:o}}update(){if("line"==this.type){const e=this.targetComponent,t=projectPointOnLine(this.draw.mousePosition,e.startPoint(),e.direction());this.element.center(t.x,t.y)}else{const e=this.targetComponent.element,t=this.targetComponent.radius;if(0==t)return;const n={x:e.cx(),y:e.cy()},o={x:this.draw.mousePosition.x-n.x,y:this.draw.mousePosition.y-n.y},s=t/Math.sqrt(o.x**2+o.y**2),r={x:n.x+o.x*s,y:n.y+o.y*s};this.element.center(r.x,r.y)}}}function addAppendingPinPoint({draw:e,componentRef:t}){console.assert(t,"componentRef must be defined");const n=e.circle(POINT_RADIUS).move(e.mousePosition.x-POINT_RADIUS/2,e.mousePosition.y-POINT_RADIUS/2).attr("class","pin-point dragging");return new AppendingPinPoint({draw:e,componentRef:t,element:n})}function setStrokeColor(e){if(window.FSG_BUILDER){const t=currentStrokeColor();e.attr("stroke",t)}}class LineShape extends Shape{constructor({draw:e,element:t,cover:n,points:o}){super({draw:e,element:t,cover:n,points:o}),this.isAppending=null}startPoint(){const e=this.points[0];let t={x:e.cx(),y:e.cy()};return e.component&&(t=pointOnScreen(e.component)),t}direction(){const[e,t]=this.points;let n={x:e.cx(),y:e.cy()},o={x:t.cx(),y:t.cy()};e.component&&t.component&&(n=pointOnScreen(e.component),o=pointOnScreen(t.component));const s=o.x-n.x,r=o.y-n.y,i=Math.sqrt(s**2+r**2);return{x:s/i,y:r/i}}endAppendMode(){this.isAppending&&(this.isAppending.remove(),this.isAppending=null)}toggleAppendMode(e){if(this.isAppending)this.endAppendMode();else{const t=this.component_no;this.isAppending=addAppendingPinPoint({draw:e,componentRef:t})}}getAttributes(){return["id","class","cx","cy","text","stroke"]}}class Line extends LineShape{constructor({draw:e,points:t,element:n,cover:o}){super({draw:e,element:n,cover:o,points:t});const[s,r]=t;this.watchUpdate(t,(()=>{const t=e.bbox(),i=pointOnScreen(s.component),a=pointOnScreen(r.component),[c,l]=clipping(t,i,a);c&&l&&(n.plot(c.x,c.y,l.x,l.y),o.plot(c.x,c.y,l.x,l.y),n.fire("update"))}))}}function addLine({draw:e,componentRefs:t,element:n,cover:o,component_no:s}){const r=t.map((t=>componentByNo(e,t).element));if(!n){const t=e.bbox(),[s,i]=r;console.assert(s,"p1 must be defined",r),console.assert(i,"p2 must be defined",r);const a={x:s.cx(),y:s.cy()},c={x:i.cx(),y:i.cy()},[l,d]=clipping(t,a,c);setStrokeColor(n=e.line(l.x,l.y,d.x,d.y).attr("class","line dashed shape component selected")),o=e.line(l.x,l.y,d.x,d.y).attr("class","cover"),putBehindPoints(e,r,o,n)}return s&&n.attr(COMPONENT_NO_ATTR,s),new Line({draw:e,points:r,element:n,cover:o,component_no:s})}function getClipped(e,t,n){console.assert(t,"p1 must be defined"),console.assert(n,"p2 must be defined");const o=e.bbox(),[s,r]=clipping(o,{x:t.x,y:t.y},{x:n.x,y:n.y});if(!s||!r)return;const i=n.x-t.x,a=n.y-t.y,c=s.x-t.x,l=s.y-t.y;let d=s;return 0!=i?c*i<0&&(d=r):l*a<0&&(d=r),d}class Ray extends LineShape{constructor({draw:e,points:t,element:n,cover:o}){super({draw:e,element:n,cover:o,points:t});const[s,r]=t;this.watchUpdate(t,(()=>{const t=pointOnScreen(s.component),i=pointOnScreen(r.component),a=getClipped(e,t,i);a&&(n.plot(t.x,t.y,a.x,a.y),o.plot(t.x,t.y,a.x,a.y),n.fire("update"))}))}}function addRay({draw:e,componentRefs:t,element:n,cover:o,component_no:s}){const r=t.map((t=>componentByNo(e,t).element));if(!n){const[t,s]=r,i={x:t.cx(),y:t.cy()},a={x:s.cx(),y:s.cy()},c=getClipped(e,i,a);console.assert(c,"clip must exist"),setStrokeColor(n=e.line(i.x,i.y,c.x,c.y).attr("class","ray dashed shape component selected")),o=e.line(i.x,i.y,c.x,c.y).attr("class","cover"),putBehindPoints(e,r,o,n)}return s&&n.attr(COMPONENT_NO_ATTR,s),new Ray({draw:e,points:r,element:n,cover:o})}class ParallelLine extends Line{constructor({draw:e,points:t,element:n,cover:o}){super({draw:e,element:n,cover:o,points:t});const s=t.map((e=>(e.on("remove",this.remove.bind(this)),e.attr("component_no"))));n.attr(COMPONENT_REFS_ATTR,s.join(","))}undo(){this.points[1].remove(),super.undo()}}function addParallelLine({draw:e,coord:t,componentRefs:n,element:o,cover:s,component_no:r}){let i=n.map((t=>componentByNo(e,t).element));if(!o){const r=i[1],a=addParallelPoint({draw:e,coord:t,componentRefs:n}).element,c=e.bbox();console.assert(r,"p1 must be defined",i),console.assert(a,"p2 must be defined",i);const l={x:r.cx(),y:r.cy()},d={x:a.cx(),y:a.cy()},[m,p]=clipping(c,l,d);setStrokeColor(o=e.line(m.x,m.y,p.x,p.y).attr("class","parallel-line dashed shape component selected")),s=e.line(m.x,m.y,p.x,p.y).attr("class","cover"),i=[r,a],putBehindPoints(e,i,s,o)}return r&&o.attr(COMPONENT_NO_ATTR,r),new ParallelLine({draw:e,points:i,element:o,cover:s,component_no:r})}class PerpLine extends Line{constructor({draw:e,points:t,element:n,cover:o}){super({draw:e,element:n,cover:o,points:t});const s=t.map((e=>(e.on("remove",this.remove.bind(this)),e.attr("component_no"))));n.attr(COMPONENT_REFS_ATTR,s.join(","))}undo(){this.points[1].remove(),super.undo()}}function addPerpLine({draw:e,coord:t,componentRefs:n,element:o,cover:s,component_no:r}){let i=n.map((t=>componentByNo(e,t).element));if(!o){const r=i[1],a=addPerpPoint({draw:e,coord:t,componentRefs:n}).element,c=e.bbox();console.assert(r,"p1 must be defined",i),console.assert(a,"p2 must be defined",i);const l={x:r.cx(),y:r.cy()},d={x:a.cx(),y:a.cy()},[m,p]=clipping(c,l,d);setStrokeColor(o=e.line(m.x,m.y,p.x,p.y).attr("class","perp-line dashed shape component selected")),s=e.line(m.x,m.y,p.x,p.y).attr("class","cover"),i=[r,a],putBehindPoints(e,i,s,o)}return r&&o.attr(COMPONENT_NO_ATTR,r),new PerpLine({draw:e,points:i,element:o,cover:s,component_no:r})}class BisectorLine extends LineShape{constructor({draw:e,points:t,element:n,cover:o}){super({draw:e,element:n,cover:o,points:t});const[s,r,i]=t;this.watchUpdate(t,(()=>{const t=e.bbox(),a=coordOfBisectorPoint(s,r,i),c={x:r.cx(),y:r.cy()},l={x:a.x,y:a.y},[d,m]=clipping(t,c,l);d&&m&&(n.plot(d.x,d.y,m.x,m.y),o.plot(d.x,d.y,m.x,m.y),n.fire("update"))}));const a=t.map((e=>(e.on("remove",this.remove.bind(this)),e.attr("component_no"))));n.attr(COMPONENT_REFS_ATTR,a.join(","))}startPoint(){const e=this.points[1];let t={x:e.cx(),y:e.cy()};return e.component&&(t=pointOnScreen(e.component)),t}direction(){const[e,t,n]=this.points,o=coordOfBisectorPoint(e,t,n),s=this.startPoint(),r=o.x-s.x,i=o.y-s.y,a=Math.sqrt(r**2+i**2);return{x:r/a,y:i/a}}}function coordOfBisectorPoint(e,t,n){const o=e.cx()-t.cx(),s=e.cy()-t.cy(),r=n.cx()-t.cx(),i=n.cy()-t.cy(),a=Math.sqrt(o**2+s**2),c=Math.sqrt(r**2+i**2),l=o/a,d=s/a,m=r/c,p=i/c;return{x:t.cx()+(l+m)/2,y:t.cy()+(d+p)/2}}function addBisectorLine({draw:e,componentRefs:t,element:n,cover:o,component_no:s}){let r=t.map((t=>componentByNo(e,t).element));if(!n){const[t,s,i]=r,a=e.bbox(),c=coordOfBisectorPoint(t,s,i),l={x:s.cx(),y:s.cy()},d={x:c.x,y:c.y},[m,p]=clipping(a,l,d);setStrokeColor(n=e.line(m.x,m.y,p.x,p.y).attr("class","bisector-line dashed shape component selected")),o=e.line(m.x,m.y,p.x,p.y).attr("class","cover"),putBehindPoints(e,r,o,n)}return s&&n.attr(COMPONENT_NO_ATTR,s),new BisectorLine({draw:e,points:r,element:n,cover:o})}class SelectablePoint extends SelectableComponent{constructor({draw:e,element:t,override:n}){n||t.on("mousedown",(e=>{t.lastEvent="mousedown",e.stopPropagation()})).on("mouseup",(()=>{"mousedown"==t.lastEvent&&this.toggleSelected(),t.lastEvent="mouseup"})),super({draw:e,element:t})}getAttributes(){return["id","class","cx","cy","text"]}}class IntersectPoint extends SelectablePoint{constructor({draw:e,index:t,componentRefs:n,element:o}){super({draw:e,element:o}),this.index=t,console.assert(void 0!==t,"index should be defined"),o.attr(COMPONENT_REFS_ATTR,n.join(","));const s=n.map((t=>componentByNo(e,t)));this.refComponents=s,s.forEach((e=>{e.element.on("update",this.update.bind(this)),e.element.on("remove",this.remove.bind(this))}))}remove(){this.refComponents.forEach((e=>{e.element.off("update",this.update)})),super.remove()}update(){const e=this.refComponents;if(console.assert(e),e[1]instanceof SelectablePoint){const[t,n]=e,o=projectPointOnLine(pointOnScreen(n),t.startPoint(),t.direction());return this.element.center(o.x,o.y),void this.element.fire("update")}if(e[0]instanceof LineShape)if(e[1]instanceof LineShape){const[t,n]=e,o=intersect(t.startPoint(),t.direction(),n.startPoint(),n.direction());if(!o)return;this.element.center(o.x,o.y)}else{const[t,n]=e,o=intersectLineAndCircle(t.startPoint(),t.direction(),n.center(),n.radius);if(!o)return;const s=o[this.index];s?this.element.center(s.x,s.y):console.log(this.index)}else if(e[1]instanceof LineShape){const[t,n]=e,o=intersectLineAndCircle(n.startPoint(),n.direction(),t.center(),t.radius);if(!o)return;const s=o[this.index];this.element.center(s.x,s.y)}else{const[t,n]=e,o=twoCirclesIntersection({a:t.center().x,b:t.center().y,r:t.radius},{a:n.center().x,b:n.center().y,r:n.radius});if(!o)return;const s=o[this.index];this.element.center(s.x,s.y)}this.element.fire("update")}}function addIntersectPoint({draw:e,coord:t,index:n,componentRefs:o,element:s,component_no:r}){return t||(t={x:0,y:0}),s?(n=s.attr("index"),console.assert(void 0!==n,"index must be defined")):(console.assert(void 0!==n,"index must be defined"),s=e.circle(POINT_RADIUS).move(t.x-POINT_RADIUS/2,t.y-POINT_RADIUS/2).attr("class","intersect-point component").attr("index",n)),r&&s.attr(COMPONENT_NO_ATTR,r),new IntersectPoint({draw:e,index:n,componentRefs:o,element:s})}class MidPoint extends SelectablePoint{constructor({draw:e,componentRefs:t,element:n}){super({draw:e,element:n}),n.attr(COMPONENT_REFS_ATTR,t.join(","));const o=t.map((t=>componentByNo(e,t)));this.refComponents=o,o.forEach((e=>{e.element.on("update",this.update.bind(this)),e.element.on("remove",this.remove.bind(this))}))}remove(){this.refComponents.forEach((e=>{e.element.off("update",this.update)})),super.remove()}update(){const e=this.refComponents;console.assert(e);const[t,n]=e,o=t.center(),s=n.center(),r={x:(o.x+s.x)/2,y:(o.y+s.y)/2};this.element.center(r.x,r.y),this.element.fire("update")}}function addMidPoint({draw:e,componentRefs:t,element:n,component_no:o}){const s=t.map((t=>componentByNo(e,t).element));if(!n){const[t,o]=s,r={x:t.cx(),y:t.cy()},i={x:o.cx(),y:o.cy()},a={x:(r.x+i.x)/2,y:(r.y+i.y)/2};n=e.circle(POINT_RADIUS).move(a.x-POINT_RADIUS/2,a.y-POINT_RADIUS/2).attr("class","mid-point component")}return o&&n.attr(COMPONENT_NO_ATTR,o),new MidPoint({draw:e,componentRefs:t,element:n})}function setStyle(e){const t=currentStrokeColor();e.attr("stroke",t)}class DraggablePoint extends SelectablePoint{constructor({draw:e,element:t,override:n}){n||(t.on("mousedown",(e=>{t.lastEvent="mousedown",t.fire("dragstart",{dragTarget:t}),e.stopPropagation()})).on("mouseup",(()=>{"mousedown"==t.lastEvent&&this.toggleSelected(),t.lastEvent="mouseup",t.fire("dragend")})).on("mousemove",(()=>{t.lastEvent="mousemove"})).on("dragstart",(()=>{t.addClass("dragging"),e.dragTarget=t})).on("dragend",(()=>{t.removeClass("dragging"),e.dragTarget=null})).on("dragmove",(()=>{t.fire("update",{target:this})})),n=!0),super({draw:e,element:t,override:n})}}class Point extends DraggablePoint{constructor({draw:e,element:t}){super({draw:e,element:t})}}function addPoint({draw:e,coord:t,element:n,component_no:o}){return t||(t={x:0,y:0}),n||setStyle(n=e.circle(POINT_RADIUS).move(t.x-POINT_RADIUS/2,t.y-POINT_RADIUS/2).attr("class","point component")),o&&n.attr(COMPONENT_NO_ATTR,o),new Point({draw:e,element:n})}class PinPoint extends DraggablePoint{constructor({draw:e,type:t,componentRef:n,element:o}){super({draw:e,element:o,override:!0}),this.type=t,o.attr(COMPONENT_REFS_ATTR,n),o.on("mousedown",(e=>{o.lastEvent="mousedown",o.fire("dragstart",{dragTarget:o}),e.stopPropagation()})).on("mouseup",(()=>{"mousedown"==o.lastEvent&&this.toggleSelected(),o.lastEvent="mouseup",o.fire("dragend")})).on("mousemove",(()=>{o.lastEvent="mousemove"})).on("dragstart",(()=>{o.addClass("dragging"),e.dragTarget=o})).on("dragend",(()=>{o.removeClass("dragging"),this.calcState(),e.dragTarget=null})).on("dragmove",(()=>{o.fire("update",{target:this})}));const s=componentByNo(e,n);s.element.on("update",this.update.bind(this)),s.element.on("remove",this.remove.bind(this)),this.targetComponent=s,this.calcState()}remove(){this.targetComponent.element.off("update",this.update),super.remove()}calcState(){const e=this.element;if("line"==this.type){const t=this.targetComponent,n=t.startPoint(),o=t.direction(),s=e.cx()-n.x,r=e.cy()-n.y;this.distance=0!=s?s/o.x:0!=r?r/o.y:0}else{const t=this.targetComponent,n=t.radius;if(0==n)this.unitVector={x:0,y:0};else{const o={x:t.element.cx(),y:t.element.cy()},s={x:e.cx(),y:e.cy()};this.unitVector={x:(s.x-o.x)/n,y:(s.y-o.y)/n}}}}update(){if(this.draw.dragTarget!=this.element){if("line"==this.type){const e=this.targetComponent,t=e.startPoint(),n=e.direction(),o={x:t.x+n.x*this.distance,y:t.y+n.y*this.distance};this.element.center(o.x,o.y)}else{const e=this.targetComponent,t=e.element,n=e.radius;if(0==n)return;const o={x:t.cx(),y:t.cy()},s=this.unitVector,r={x:o.x+s.x*n,y:o.y+s.y*n};this.element.center(r.x,r.y)}this.element.fire("update")}else{if("line"==this.type){const e=this.targetComponent,t=projectPointOnLine(this.draw.mousePosition,e.startPoint(),e.direction());this.element.center(t.x,t.y)}else{const e=this.targetComponent.element,t=this.targetComponent.radius;if(0==t)return;const n={x:e.cx(),y:e.cy()},o={x:this.draw.mousePosition.x-n.x,y:this.draw.mousePosition.y-n.y},s=t/Math.sqrt(o.x**2+o.y**2),r={x:n.x+o.x*s,y:n.y+o.y*s};this.element.center(r.x,r.y)}this.element.fire("update")}}}function addPinPoint({draw:e,coord:t,type:n,componentRef:o,element:s,component_no:r}){return s||(s=e.circle(POINT_RADIUS).move(t.x-POINT_RADIUS/2,t.y-POINT_RADIUS/2).attr("class","pin-point component")),r&&s.attr(COMPONENT_NO_ATTR,r),new PinPoint({draw:e,type:n,componentRef:o,element:s})}function useCurrentColors(e){if(window.FSG_BUILDER){const t=currentStrokeColor();e.attr("style",`color: ${t};`)}}class LaTeX extends SelectableComponent{constructor({draw:e,element:t,componentRef:n}){super({draw:e,element:t}),t.removeClass("text"),t.addClass("latex"),n&&this.watchTarget(e,n),this.makeDraggable(e,t)}watchTarget(e,t){const n=componentByNo(e,t)?.element;n&&(this.target=n,this.watchUpdate([this.target],(()=>{const e=this.element.attr("offset_x"),t=this.element.attr("offset_y"),o={x:n.cx()+e,y:-n.cy()+t};this.element.move(o.x,o.y),this.element.fire("update")})))}makeDraggable(e,t){const n=this.target;t.on("mousedown",(e=>{t.lastEvent="mousedown",t.fire("dragstart",{dragTarget:t}),e.stopPropagation()})).on("mouseup",(()=>{"mousedown"==t.lastEvent&&this.toggleSelected(),t.lastEvent="mouseup",t.fire("dragend")})).on("mousemove",(()=>{t.lastEvent="mousemove"})).on("dragstart",(()=>{t.addClass("dragging"),e.dragTarget=t})).on("dragend",(()=>{if(t.removeClass("dragging"),e.dragTarget=null,n){const e={dx:t.x()-n.cx(),dy:t.y()+n.cy()};t.attr("offset_x",e.dx).attr("offset_y",e.dy)}})).on("dragmove",(()=>{t.fire("update",{target:this})}))}setText(e){e||(e="");let t=this.element;const n=this.draw,o={x:t.attr("x"),y:-t.attr("y")},s={x:t.attr("offset_x")??0,y:t.attr("offset_y")??0},r=t.attr(OF_ATTR),i=this.getAttribute("stroke");t.clear().remove();const a=genLaTeX(this.draw,e,o);a&&(a.attr("offset_x",s.x).attr("offset_y",s.y).attr(COMPONENT_NO_ATTR,this.component_no),r&&a.attr(OF_ATTR,r),a.component=this,this.element=a,r&&this.watchTarget(n,r),this.makeDraggable(n,a),this.setAttribute("stroke",i),n.add(a))}getText(){return this.element.attr("text")}getAttributes(){return["id","class","cx","cy","text","stroke"]}getAttribute(e){if("stroke"==e){return this.element.node.getAttribute("style")?.replace(/(color| |:|;)/g,"")??"#999999ff"}return super.getAttribute(e)}setAttribute(e,t){"stroke"!=e?super.setAttribute(e,t):this.element.attr("style",`color: ${t};`)}}function foreignTex(e,t){const n=SVG(String.raw`<div xmlns="http://www.w3.org/1999/xhtml" class="latex-container"></div>`);let o;try{let s=katex.renderToString(t,katex_options);s=s.replace(/\&nbsp;/g,"&#160;"),n.node.innerHTML=s,o=e.foreignObject(800,600).add(n);const{width:r,height:i}=n.node.getBoundingClientRect();return o.size(r,i),o}catch(e){return console.log(e),o&&o.remove(),null}}function genLaTeX(e,t,n){const o=foreignTex(e,t).flip("y");return o?(o.attr("class","latex selected component").attr("text",t).attr("x",n.x).attr("y",-n.y).attr("style","color: #888"),o):null}function addLaTeX({draw:e,element:t,text:n,unselect:o,componentRef:s}){if(t)s=t.attr(OF_ATTR);else if(s){let o=componentByNo(e,s).center();(t=genLaTeX(e,n=n??DEFAULT_TEXT,o)).attr("offset_x",0).attr("offset_y",0).attr(OF_ATTR,s),useCurrentColors(t)}else{const o=e.mousePosition;useCurrentColors(t=genLaTeX(e,n=n??DEFAULT_TEXT,o))}const r=new LaTeX({draw:e,element:t,componentRef:s});return o&&unselectComponent(e,r),r}const katex_options={throwOnError:!1,output:"html",delimiters:[{left:"$",right:"$",display:!1},{left:"\\(",right:"\\)",display:!1},{left:"\\[",right:"\\]",display:!0},{left:"\\begin{equation}",right:"\\end{equation}",display:!0}],trust:!0,strict:"ignore",macros:{"\\eqref":"\\href{#1}{}","\\label":"\\href{#1}{}","\\require":"\\href{#1}{}","\\tag":"\\href{#1}{}","\\hfil":"\\space","\\style":"\\href{#1}{}","\\def":"\\gdef","\\cal":"\\mathcal","\\pmatrix":"\\begin{pmatrix}#1\\end{pmatrix}","\\vmatrix":"\\begin{vmatrix}#1\\end{vmatrix}","\\bmatrix":"\\begin{bmatrix}#1\\end{bmatrix}","\\cases":"\\begin{cases}#1\\end{cases}","\\align":"\\begin{aligned}#1\\end{aligned}","\\eqalign":"\\begin{aligned}#1\\end{aligned}","\\array":"\\begin{array}#1\\end{array}","\\gather":"\\begin{gathered}#1\\end{gathered}"}};function init_module_history(e){e.fsg.history={},e.fsg.history.history=[],e.fsg.history.redo_list=[]}function doAction(e,t,n){const o=e.fsg.history,s=t(n);s.redo=()=>{s.component_no&&(n.component_no=s.component_no),doAction(e,t,n)},o.history.push(s)}function contain_user_script(e){const t=e.defs().find("script");let n=!1;return t.forEach((e=>{e.node.getAttribute("xmlns")==FSG_NAMESPACE&&e.node.textContent.length>0&&(n=!0)})),n}function execute_user_script(draw){console.assert(draw,"draw must be defined");const scripts=draw.parent().defs().find("script");scripts.forEach((script=>{if(script.node.getAttribute("xmlns")==FSG_NAMESPACE)try{eval(script.node.textContent)}catch(e){console.log(e),alert(e.stack)}}))}const _serverURL="https://fathomless-brushlands-18222.herokuapp.com";function fetchURL(e,t){return new Promise(((n,o)=>{fetch(e,t).then((e=>e.json())).then((e=>{e.error?o(e.error):n(e)})).catch((e=>{o(e)}))}))}function stdGetHeader$1(){return{method:"GET",headers:new Headers({"Content-Type":"text/plain"})}}function getHash(){return fetchURL(_serverURL+"/code/hash",stdGetHeader$1())}function postCode(e,t){return fetchURL(_serverURL+"/code/"+e,{method:"POST",body:JSON.stringify(t),headers:new Headers({"Content-Type":"application/json"})})}class LineSegment extends LineShape{constructor({draw:e,points:t,element:n,cover:o}){if(super({draw:e,element:n,cover:o,points:t}),t){const[e,s]=t;this.watchUpdate(t,(()=>{const t=pointOnScreen(e.component),r=pointOnScreen(s.component);n.plot(t.x,t.y,r.x,r.y),o.plot(t.x,t.y,r.x,r.y),n.fire("update")}))}else unselectComponent(e,this)}}function addEdge({draw:e,componentRefs:t,element:n,cover:o,component_no:s}){const r=t.map((t=>componentByNo(e,t).element));if(!n){const[t,s]=r,i={x:t.cx(),y:t.cy()},a={x:s.cx(),y:s.cy()};setStrokeColor(n=e.line(i.x,i.y,a.x,a.y).attr("class","edge dashed shape component selected")),o=e.line(i.x,i.y,a.x,a.y).attr("class","cover"),putBehindPoints(e,r,o,n)}return s&&n.attr(COMPONENT_NO_ATTR,s),new LineSegment({draw:e,points:r,element:n,cover:o})}function addVector({draw:e,componentRefs:t,element:n,cover:o,component_no:s}){const r=t.map((t=>componentByNo(e,t).element));if(!n){const[t,s]=r,i={x:t.cx(),y:t.cy()},a={x:s.cx(),y:s.cy()};setStrokeColor(n=e.line(i.x,i.y,a.x,a.y).attr("class","vector dashed shape component selected")),o=e.line(i.x,i.y,a.x,a.y).attr("class","cover"),putBehindPoints(e,r,o,n)}return n.marker("start",e.fsg.marker.vector_start_marker),n.marker("end",e.fsg.marker.vector_end_marker),s&&n.attr(COMPONENT_NO_ATTR,s),new LineSegment({draw:e,points:r,element:n,cover:o})}class Axis extends LineSegment{constructor({draw:e,element:t,cover:n}){super({draw:e,element:t,cover:n})}startPoint(){return{x:this.element.attr("x1"),y:this.element.attr("y1")}}direction(){const e=this.element.attr("x1"),t=this.element.attr("y1"),n=this.element.attr("x2")-e,o=this.element.attr("y2")-t,s=Math.sqrt(n**2+o**2);return{x:n/s,y:o/s}}setCoord(e,t){this.element.plot(e.x,e.y,t.x,t.y),this.cover.plot(e.x,e.y,t.x,t.y),this.element.fire("update")}}function addAxis({draw:e,type:t,element:n,cover:o,component_no:s}){if(!n){const s=e.parent().viewbox();let r,i;"axis-x"==t?(r={x:-s.width/2,y:0},i={x:s.width/2,y:0}):(r={x:0,y:-s.height/2},i={x:0,y:s.height/2}),n=e.line(r.x,r.y,i.x,i.y).attr("class",t+" dashed shape component selected").attr("stroke",DEFAULT_STROKE_COLOR),o=e.line(r.x,r.y,i.x,i.y).attr("class","cover")}return n.marker("end",e.fsg.marker.vector_end_marker),n.removeClass("dashed"),n.addClass(t),s&&n.attr(COMPONENT_NO_ATTR,s),new Axis({draw:e,element:n,cover:o})}function useCurrentColors$1(e){if(window.FSG_BUILDER){const t=currentFillColor(),n=currentStrokeColor();e.attr("fill",t),e.attr("stroke",n)}}class FillableShape extends Shape{constructor({draw:e,element:t,cover:n,points:o}){super({draw:e,element:t,cover:n,points:o})}}class Circle extends FillableShape{constructor({draw:e,radius:t,points:n,element:o,cover:s}){super({draw:e,element:o,cover:s,points:n}),this.radius=t;const[r,i]=n;this.watchUpdate(n,(()=>{const e=Math.sqrt((i.cx()-r.cx())**2+(i.cy()-r.cy())**2);this.radius=e,o.radius(e),o.center(r.cx(),r.cy()),s.radius(e),s.center(r.cx(),r.cy()),o.fire("update")}))}endAppendMode(){this.isAppending&&(this.isAppending.remove(),this.isAppending=null)}toggleAppendMode(e){if(this.isAppending)this.endAppendMode();else{const t=this.component_no;this.isAppending=addAppendingPinPoint({draw:e,componentRef:t})}}}function addCircle({draw:e,componentRefs:t,element:n,cover:o,component_no:s}){const r=t.map((t=>componentByNo(e,t).element)),[i,a]=r,c=Math.sqrt((a.cx()-i.cx())**2+(a.cy()-i.cy())**2);return n||(useCurrentColors$1(n=e.circle().radius(c).center(i.cx(),i.cy()).attr("class","circle dashed shape component selected none")),o=e.circle().radius(c).center(i.cx(),i.cy()).attr("class","cover"),putBehindPoints(e,r,o,n)),s&&n.attr(COMPONENT_NO_ATTR,s),new Circle({draw:e,radius:c,points:r,element:n,cover:o,component_no:s})}class Polygon extends FillableShape{constructor({draw:e,points:t,element:n,cover:o}){super({draw:e,element:n,cover:o,points:t}),this.watchUpdate(t,(()=>{let e=t.map((e=>{const t=pointOnScreen(e.component);return[t.x,t.y]}));n.plot(e),o.plot(e),n.fire("update")}))}}function addPolygon({draw:e,componentRefs:t,element:n,cover:o,component_no:s}){const r=t.map((t=>componentByNo(e,t).element)),i=r.map((e=>[e.cx(),e.cy()]));return n||(useCurrentColors$1(n=e.polygon(i).attr("class","polygon dashed shape component selected none")),o=e.polygon(i).attr("class","cover"),putBehindPoints(e,r,o,n)),s&&n.attr(COMPONENT_NO_ATTR,s),new Polygon({draw:e,points:r,element:n,cover:o})}function arcOf(e,t,n,o=!1){const s=DEFAULT_ANGLE_RADIUS;t={x:t.cx(),y:t.cy()};const r=e.cx()-t.x,i=e.cy()-t.y,a=n.cx()-t.x,c=n.cy()-t.y,l=Math.sqrt(r**2+i**2),d=Math.sqrt(a**2+c**2);if(0==l||0==d)return"";let m=r/l*s,p=i/l*s,u=a/d*s,h=c/d*s;const f=t.x+m,x=t.y+p,_=t.x+u,g=t.y+h;let y=m*h-p*u>=0?0:1,v=1;const T=1e-6;if(o){if(Math.abs(u+p)<T&&Math.abs(h-m)<T)return String.raw`M ${t.x} ${t.y} L ${f} ${x} L ${f+u} ${x+h} L ${_} ${g} Z`}else if(v=1==y?0:1,y=0,Math.abs(u+p)<T&&Math.abs(h-m)<T||Math.abs(m+h)<T&&Math.abs(p-u)<T)return String.raw`M ${t.x} ${t.y} L ${f} ${x} L ${f+u} ${x+h} L ${_} ${g} Z`;return String.raw`M ${f} ${x} A ${s} ${s} 0 ${y} ${v} ${_} ${g} L ${t.x} ${t.y} Z`}class Arc extends FillableShape{constructor({draw:e,points:t,element:n,cover:o}){super({draw:e,element:n,cover:o,points:t});const s=n.attr("large_arc");this.large_arc=void 0!==s&&"true"==s;const[r,i,a]=t;this.watchUpdate(t,(()=>{const e=arcOf(r,i,a,this.large_arc);n.plot(e),o.plot(e),n.fire("update")}));const c=t.map((e=>(e.on("remove",this.remove.bind(this)),e.attr("component_no"))));n.attr(COMPONENT_REFS_ATTR,c.join(","))}toggleMode(){this.large_arc=!this.large_arc,this.element.attr("large_arc",this.large_arc?"true":"false"),this.points[0].fire("update")}}function addAngle({draw:e,componentRefs:t,element:n,cover:o,component_no:s}){let r=t.map((t=>componentByNo(e,t).element));if(!n){const[t,s,i]=r,a=arcOf(t,s,i,!1);useCurrentColors$1(n=e.path(a).attr("class","angle shape component selected none")),o=e.path(a).attr("class","cover"),putBehindPoints(e,r,o,n)}return s&&n.attr(COMPONENT_NO_ATTR,s),new Arc({draw:e,points:r,element:n,cover:o})}function findAllComponentElements(e){const t=e.find(".component");return t.sort(((e,t)=>{const n=Number(e.attr(COMPONENT_NO_ATTR));console.assert(e,"component has no component_no");const o=Number(t.attr(COMPONENT_NO_ATTR));return console.assert(t,"component has no component_no"),n-o})),t}function elementByNo(e,t){let n;return e.forEach((e=>{Number(e.attr(COMPONENT_NO_ATTR))==t&&(n=e)})),n}function reconstruct_components(e){const t=e.find(".cover"),n=findAllComponentElements(e);n.forEach((o=>{const s=o.position();if(o.hasClass("point"))return addPoint({draw:e,element:o}),void console.assert(s==o.position(),"position of element changed",s,o);if(o.hasClass("mid-point")){const t=o.attr(COMPONENT_REFS_ATTR);if(!t)return;const n=t.split(",").map((e=>Number(e)));return addMidPoint({draw:e,componentRefs:n,element:o}),void console.assert(s==o.position(),"position of element changed",s,o)}if(o.hasClass("intersect-point")){const t=o.attr(COMPONENT_REFS_ATTR);if(!t)return;const n=t.split(",").map((e=>Number(e)));return addIntersectPoint({draw:e,componentRefs:n,element:o}),void console.assert(s==o.position(),"position of element changed",s,o)}if(o.hasClass("parallel-point")){const t=o.attr(COMPONENT_REFS_ATTR);if(!t)return;const n=t.split(",").map((e=>Number(e)));return addParallelPoint({draw:e,componentRefs:n,element:o}),void console.assert(s==o.position(),"position of element changed",s,o)}if(o.hasClass("perp-point")){const t=o.attr(COMPONENT_REFS_ATTR);if(!t)return;const n=t.split(",").map((e=>Number(e)));return addPerpPoint({draw:e,componentRefs:n,element:o}),void console.assert(s==o.position(),"position of element changed",s,o)}if(o.hasClass("pin-point")){const t=o.attr(COMPONENT_REFS_ATTR);if(!t)return;const r=elementByNo(n,t);console.assert(r,"failed to locate the refereneced element");let i="line";return r instanceof SVG.Circle&&(i="circle"),addPinPoint({draw:e,type:i,componentRef:t,element:o}),void console.assert(s==o.position(),"position of element changed",s,o)}if(o.hasClass("latex")||o.hasClass("text"))return addLaTeX({draw:e,element:o}),void console.assert(s==o.position(),"position of element changed",s,o);if(o.hasClass("axis-x")){const n=coverOf(t,o.attr(COMPONENT_NO_ATTR));return addAxis({draw:e,type:"axis-x",element:o,cover:n}),void console.assert(s==o.position(),"position of element changed",s,o)}if(o.hasClass("axis-y")){const n=coverOf(t,o.attr(COMPONENT_NO_ATTR));return addAxis({draw:e,type:"axis-y",element:o,cover:n}),void console.assert(s==o.position(),"position of element changed",s,o)}const r=o.attr(COMPONENT_REFS_ATTR);if(!r)return;const i=r.split(",").map((e=>Number(e))),a=coverOf(t,o.attr(COMPONENT_NO_ATTR));return o.hasClass("edge")?(addEdge({draw:e,componentRefs:i,element:o,cover:a}),void console.assert(s==o.position(),"position of element changed",s,o)):o.hasClass("vector")?(addVector({draw:e,componentRefs:i,element:o,cover:a}),void console.assert(s==o.position(),"position of element changed",s,o)):o.hasClass("line")?(addLine({draw:e,componentRefs:i,element:o,cover:a}),void console.assert(s==o.position(),"position of element changed",s,o)):o.hasClass("ray")?(addRay({draw:e,componentRefs:i,element:o,cover:a}),void console.assert(s==o.position(),"position of element changed",s,o)):o.hasClass("polygon")?(addPolygon({draw:e,componentRefs:i,element:o,cover:a}),void console.assert(s==o.position(),"position of element changed",s,o)):o.hasClass("circle")?(addCircle({draw:e,componentRefs:i,element:o,cover:a}),void console.assert(s==o.position(),"position of element changed",s,o)):o.hasClass("angle")?(addAngle({draw:e,componentRefs:i,element:o,cover:a}),void console.assert(s==o.position(),"position of element changed",s,o)):o.hasClass("parallel-line")?(addParallelLine({draw:e,componentRefs:i,element:o,cover:a}),void console.assert(s==o.position(),"position of element changed",s,o)):o.hasClass("perp-line")?(addPerpLine({draw:e,componentRefs:i,element:o,cover:a}),void console.assert(s==o.position(),"position of element changed",s,o)):o.hasClass("bisector-line")?(addBisectorLine({draw:e,componentRefs:i,element:o,cover:a}),void console.assert(s==o.position(),"position of element changed",s,o)):void console.warn("WARNNING: Fixme - unsupported component..",o)}))}function coverOf(e,t){let n=null;return e.forEach((e=>{t==e.attr(OF_ATTR)&&(n=e)})),console.assert(n,"cover is required",e,t),n}function patchSVGJS(e){e.find(".latex-container").each((e=>{e.find("svg").each((e=>{e.attr("xmlns:svgjs",null),e.attr("xmlns:svgjs","https://svgjs.com/svgjs")}))}))}function cleanupDirtyClasses(e){e.find(".selected, .inspecting, .dragging, .hidden-point").each((e=>{e.hasClass("hidden-point")?e.remove():e.removeClass("selected").removeClass("inspecting").removeClass("dragging")}))}function patchStyles(e){const t=e.defs();t.find("style").forEach((e=>e.remove())),t.first().before(SVG(RUNTIME_DEFAULT_STYLE));t.find("link").forEach((e=>e.remove())),t.first().after(SVG(KATEX_STYLE_LINK)),t.first().after(SVG(RUNTIME_STYLE_LINK))}function patchForeignObjectLaTeX(e){e.find("div.latex-container").forEach((e=>{e.attr("xmlns",null).attr("xmlns","http://www.w3.org/1999/xhtml")}))}function patchCoverFillColor(e){e.find(".cover").forEach((e=>e.attr("fill",DEFAULT_TRANSPARENT_COLOR)))}function svgDocument(e,t={}){let n=e.parent().svg();const o=SVG(n).attr("xmlns:svgjs",null).attr("xmlns:svgjs","https://svgjs.com/svgjs").attr("xmlns:fsg",null).attr("xmlns:fsg",FSG_NAMESPACE).attr("style",null);for(const[e,n]of Object.entries(t))o.attr(e,n);patchSVGJS(o),cleanupDirtyClasses(o),patchStyles(o),patchForeignObjectLaTeX(o),patchCoverFillColor(o);return o.svg().replace(/\&nbsp;/g,"&#160;")}function saveAsSVG(e){e.isSaving=!0;var t=document.createElement("a");const n=svgDocument(e);t.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(n)),t.setAttribute("download",e.fsg.filename),t.style.display="none",document.body.appendChild(t),t.click(),document.body.removeChild(t),setTimeout((()=>{e.isSaving=!1}),300)}function exportToHTML(e){const t=e.fsg.filename.replace(/\.svg/,".html");var n=document.createElement("a");let o=svgDocument(e,{style:"width:100%;"});o="<!DOCTYPE html>"+String.raw`<head>
    <title>Fast SVG Geometry</title>
    <script src="https://cdn.jsdelivr.net/npm/@svgdotjs/svg.js@3.0/dist/svg.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css">
    <link rel="stylesheet" type="text/css" href="${SERVER_ROOT}/style/runtime.css">
    <link rel="icon" href="${SERVER_ROOT}/images/favicon.ico" type="image/x-icon" />
  </head>
`+'<body><div style="overflow:hidden">'+o+"</div></body></html>",n.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(o)),n.setAttribute("download",t),n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)}let _visible=!1;function show(e){const t=e.parent();SVG("#field_pref_width").node.value=t.attr("width");SVG("#field_pref_height").node.value=t.attr("height"),SVG("#preferenceWindow").attr("style","visibility: visible;"),_visible=!0}function hide(){SVG("#preferenceWindow").attr("style","visibility: hidden;"),_visible=!1}function toggle_preference_window(e){_visible?hide():show(e)}function showHint(e){const t=SVG("#hintBox").node,n=SVG("#message").node;n.innerText=e??n.innerText,t.classList.remove("fadeInOut"),setTimeout((()=>{t.classList.add("fadeInOut")}),100)}const MENU_WIDTH=130,MENU_PADDING_LEFT=10,MENU_PADDING_TOP=5,MENU_PADDING_BOTTOM=5,MENU_ITEM_HEIGHT=23,MENU_BACKGROUND_COLOR="#202020",MENU_BORDER_COLOR="#666",MENU_SEPARATOR_COLOR_TOP="#555",MENU_SEPARATOR_COLOR_BOTTOM="#121212";class MenuItem{constructor(e,t,n){const o=t.text(n).flip("y").attr("class","menu_item");o.on("mousedown",(t=>{this.onMouseDown(e),t.preventDefault(),t.stopPropagation()})),o.menu=t,this.item=o}move(e,t){this.item.move(e,t)}onMouseDown(){console.warn("this should be overriden")}}class Menu{constructor(e,t,n){this.draw=e;const o=e.group().translate(t.x,t.y).attr("class","menu"),s=o.rect(MENU_WIDTH,50).flip("y").stroke({color:MENU_BORDER_COLOR,width:.3}).fill(MENU_BACKGROUND_COLOR);o.text(n).flip("y").attr("class","menu_title").move(MENU_PADDING_LEFT,MENU_PADDING_TOP),this.numItems=0,this.menu=o,this.background=s,e.menu=this}addMenuItem(e,t){const n=new MenuItem(this.draw,this.menu,e);n.onMouseDown=()=>{this.remove(),t()},this.numItems++;const o=MENU_PADDING_TOP+MENU_ITEM_HEIGHT*this.numItems;this.menu.line(MENU_PADDING_LEFT-5,o,MENU_WIDTH+5-MENU_PADDING_LEFT,o).flip("y").stroke(MENU_SEPARATOR_COLOR_TOP),this.menu.line(MENU_PADDING_LEFT-5,o+1,MENU_WIDTH+5-MENU_PADDING_LEFT,o+1).flip("y").stroke(MENU_SEPARATOR_COLOR_BOTTOM),n.move(MENU_PADDING_LEFT,o+3),this.background.size(MENU_WIDTH,o+MENU_ITEM_HEIGHT+MENU_PADDING_BOTTOM)}remove(){this.menu.remove(),this.draw.menu=null}}class RuntimeMenu extends Menu{constructor(e,t){super(e,t,"Menu"),this.addMenuItem("Edit",(()=>{const t=SVG(e.parent().svg());t.findOne("#FSG_UI_LAYER")?.remove(),t.findOne("#FSG_HOVER_FILTER")?.remove();const n={code:t.svg()};getHash().then((e=>{const t=e.hash;postCode(t,n).then((()=>{window.open(SERVER_ROOT+"?source=pwa&hash="+t,"_blank",`resizable, width=${DEFAULT_WINDOW_WIDTH}, height=${DEFAULT_WINDOW_HEIGHT}`)})).catch((e=>console.log(e)))})).catch((e=>console.log(e)))})),this.addMenuItem("Play",(()=>execute_user_script(e))),this.addMenuItem("Reload",(()=>location.reload()))}}class BuilderMenu extends Menu{constructor(e,t){super(e,t,"Menu"),this.addMenuItem("Open File",(()=>{const e=SVG("#file");e.node.value="",e.node.click()})),this.addMenuItem("Copy As SVG",(()=>{const t=svgDocument(e);navigator.clipboard.writeText(t).then((()=>{showHint("Copied!")}))})),this.addMenuItem("Save As SVG",(()=>saveAsSVG(e))),this.addMenuItem("Export to HTML",(()=>exportToHTML(e))),this.addMenuItem("Reset Viewbox",(()=>{const t=e.parent().attr("width"),n=e.parent().attr("height");e.parent().viewbox(0,0,t,n)})),this.addMenuItem("Preference",(()=>toggle_preference_window(e)))}}function init_module_drag(e,t=!0){let n;e.on("contextmenu",(e=>e.preventDefault()));const o=e.findOne(".ui-select-box");o?n=o:(n=e.parent().rect(0,0).attr("class","ui-select-box"),e.add(n)),e.selectBox=n,e.dragTarget=null,e.dragStart=null,e.on("mousedown",(t=>{if(e.menu)e.menu.remove();else{if(2==t.button)return window.FSG_RUNTIME?new RuntimeMenu(e,e.point(t.clientX,t.clientY)):window.FSG_BUILDER&&new BuilderMenu(e,e.point(t.clientX,t.clientY)),t.preventDefault(),void t.stopPropagation();if(0==t.button){if(e.dragTarget&&e.dragTarget.component instanceof AppendingPinPoint){const t=e.dragTarget.component.done();doAction(e,addPinPoint,t)}else e.lastEvent="mousedown";t.altKey||(e.dragStart=e.point(t.clientX,t.clientY)),e.dragTarget=null}}})).on("mouseup_on_document",(()=>{e.dragTarget&&(e.dragTarget.fire("dragend"),e.dragTarget=null),e.dragStart&&(e.dragStart=null,n.size(0,0))})).on("mouseup",(o=>{if(e.dragTarget&&(e.dragTarget.fire("dragend"),e.dragTarget=null),e.dragStart=null,n.size(0,0),"mousedown"==e.lastEvent&&(e.lastEvent="mouseup",t)){let t=e.point(o.clientX,o.clientY);t=snapTo(t),doAction(e,addPoint,{draw:e,coord:t})}})).on("mousemove",(t=>{e.lastEvent="mousemove";const o=e.point(t.clientX,t.clientY);e.mousePosition=snapTo(o);const s=e.dragTarget;if(s)if(s.component instanceof AppendingPinPoint||s.component instanceof PinPoint)s.component.update();else{const e={x:s.cx(),y:s.cy()},t=o;t.x==e.x&&t.y==e.y||("text"==s.type||s.component instanceof LaTeX?s.center(t.x,-t.y):s.center(t.x,t.y),s.fire("dragmove"))}if(e.dragStart){let s=Math.abs(o.x-e.dragStart.x),r=Math.abs(o.y-e.dragStart.y),i=(o.x+e.dragStart.x)/2,a=(o.y+e.dragStart.y)/2;n.size(s,r).center(i,a),selectAllInBox(e,n,t.shiftKey)}}))}function selectAllInBox(e,t,n){e.find(".component").forEach((o=>{if(o.component instanceof InvisiblePoint)return;if(!n&&o.hasClass("selected"))return;const s=o.bbox();t.inside(s.x,s.y)&&t.inside(s.x+s.width,s.y+s.height)&&(console.assert(o.component,"element.component must exist",o),n?unselectComponent(e,o.component):selectComponent(e,o.component))}))}function init_module_selection(e){console.assert(e,"draw must exist"),e.fsg.selection={},e.fsg.selection.selections=[],window.selectComponent=selectComponent$1,window.unselectComponent=unselectComponent$1}const inspector=SVG("#inspector");function inspect(e){inspector?.fire("inspect-component",{component:e})}function detach(){inspector?.fire("inspect-detach")}function selectComponent$1(e,t){if(!e.ready)return;console.assert(e,"draw must exist");let n=e.fsg.selection.selections,o=Array.isArray(t)?t:[t];return o.forEach((e=>{console.assert(e,o),e instanceof InvisiblePoint||(e.select(),n=n.filter((t=>t!==e)),n.push(e),inspect(e))})),e.fsg.selection.selections=n,t}function unselectComponent$1(e,t){console.assert(e,"draw must exist");let n=e.fsg.selection.selections;(Array.isArray(t)?t:[t]).forEach((e=>{e.unselect(),n=n.filter((t=>t!==e))}));const o=n.length;return 0==o?detach():inspect(n[o-1]),e.fsg.selection.selections=n,t}function init_modules(e){e.fsg={},init_module_marker(e),init_module_history(e),init_module_selection(e),init_component_system(e),init_module_drag(e,!1),reconstruct_components(e)}function UILayer(e){let t=e.parent().findOne("#FSG_UI_LAYER");return t||(t=e.parent().group().attr("id","FSG_UI_LAYER")),t}function drawTitle(e,t){const n=UILayer(e),o=n.text(t).attr("class","title").attr("offset_x",0).attr("offset_y",0),{width:s,height:r}=n.parent().viewbox(),i={x:(s-o.bbox().width)/2,y:r-30};o.move(i.x,i.y),n.add(o);const a=o.bbox();n.rect(a.width+30,a.height+8).radius(10,15).attr("fill","#000").attr("stroke","#888").center(o.cx(),o.cy()).insertBefore(o)}function showPlayButton(e){let t=e.parent().defs().findOne("#FSG_HOVER_FILTER");t||(t=SVG(String.raw`<filter id="FSG_HOVER_FILTER" x="-20%" y="-20%" width="140%" height="140%" filterUnits="objectBoundingBox" primitiveUnits="userSpaceOnUse" color-interpolation-filters="linearRGB">
  <feBlend mode="screen" x="0%" y="0%" width="100%" height="100%" in="SourceGraphic" in2="SourceGraphic" result="blend1"/>
</filter>`),e.parent().defs().add(t));const n=UILayer(e).image(`${SERVER_ROOT}/images/run.svg`).size(34,34),{width:o}=e.parent().viewbox();n.move(o-44,10).on("click",(()=>{execute_user_script(e)})).on("mouseover",(()=>n.attr("filter","url(#FSG_HOVER_FILTER)"))).on("mouseleave",(()=>n.attr("filter",null)))}function init(){if(window.FSG_BUILDER)console.error("runtime should not be run under builder");else{if(window.FSG_RUNTIME)return;window.FSG_RUNTIME=!0,SVG.extend(SVG.Runner,{update:function(){this.during((()=>this.element().fire("update")))}});if(document.contentType.includes("html")){SVG.find("fsg").forEach((e=>{fetchSrc(e.attr("src")).then((t=>{if(!t)return;const n=SVG(t),o=n.first();o._content=n.svg(),init_modules(o),o.ready=!0,e.add(n);const s=e.attr("title");s&&drawTitle(o,s),contain_user_script(o)&&showPlayButton(o)}))}))}else{const e=SVG("svg"),t=e.first();t._content=e.svg(),init_modules(t),t.ready=!0;const n=window.frameElement?.getAttribute("title");n&&drawTitle(t,n),contain_user_script(t)&&showPlayButton(t)}}}SVG.on(document,"DOMContentLoaded",(()=>init()))})();